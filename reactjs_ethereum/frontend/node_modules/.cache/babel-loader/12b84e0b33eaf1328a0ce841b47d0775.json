{"ast":null,"code":"'use strict';\n/**\n * Keeps track of all running queries.\n */\n\nvar _classCallCheck = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar QueryManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new QueryManager.\n   */\n  function QueryManager() {\n    _classCallCheck(this, QueryManager);\n\n    this.queries = new Set();\n    this.running = false;\n  }\n  /**\n   * Called when a query is started.\n   *\n   * @param {Query} query\n   */\n\n\n  _createClass(QueryManager, [{\n    key: \"queryStarted\",\n    value: function queryStarted(query) {\n      this.queries.add(query);\n    }\n    /**\n     * Called when a query completes.\n     *\n     * @param {Query} query\n     */\n\n  }, {\n    key: \"queryCompleted\",\n    value: function queryCompleted(query) {\n      this.queries.delete(query);\n    }\n    /**\n     * Starts the query manager.\n     */\n\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.running = true;\n    }\n    /**\n     * Stops all queries.\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.running = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.queries[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var query = _step.value;\n          query.stop();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.queries.clear();\n    }\n  }]);\n\n  return QueryManager;\n}();\n\nmodule.exports = QueryManager;","map":null,"metadata":{},"sourceType":"script"}