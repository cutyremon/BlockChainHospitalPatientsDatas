{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _require = require('./index'),\n    Message = _require.Message;\n\nvar SignPrefix = Buffer.from('libp2p-pubsub:');\nmodule.exports.SignPrefix = SignPrefix;\n/**\n * Signs the provided message with the given `peerId`\n *\n * @param {PeerId} peerId\n * @param {Message} message\n * @param {function(Error, Message)} callback\n * @returns {void}\n */\n\nmodule.exports.signMessage = function (peerId, message, callback) {\n  // Get the message in bytes, and prepend with the pubsub prefix\n  var bytes = Buffer.concat([SignPrefix, Message.encode(message)]); // Sign the bytes with the private key\n\n  peerId.privKey.sign(bytes, function (err, signature) {\n    if (err) return callback(err);\n    callback(null, _objectSpread({}, message, {\n      signature: signature,\n      key: peerId.pubKey.bytes\n    }));\n  });\n};","map":null,"metadata":{},"sourceType":"script"}