{"ast":null,"code":"import _classCallCheck from \"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/cutyremon/blockChain/reactjs_ethereum/frontend/src/Components/CreateMedical.js\";\nimport React, { Component } from 'react';\nimport ipfs from './ipfs';\nimport IPFSUploader from 'ipfs-image-web-upload';\nimport IPFS from 'ipfs';\n\nvar CreateMedical =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateMedical, _Component);\n\n  function CreateMedical(props) {\n    var _this;\n\n    _classCallCheck(this, CreateMedical);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateMedical).call(this, props));\n    _this.state = {\n      ipfsHash: '',\n      web3: null,\n      buffer: null\n    };\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CreateMedical, [{\n    key: \"captureFile\",\n    value: function captureFile(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this2.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this2.state.buffer);\n      };\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      ipfs.files.add(this.state.buffer, function (error, result) {\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        return _this3.setState({\n          ipfsHash: result[0].hash\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pure-g\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pure-u-1-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Your Image dsss\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"This image is stored on IPFS & The Ethereum Blockchain!\"), React.createElement(\"img\", {\n        src: \"https://ipfs.io/ipfs/\".concat(this.state.ipfsHash),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Upload Image\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return CreateMedical;\n}(Component);\n\nexport default CreateMedical;","map":{"version":3,"sources":["/home/cutyremon/blockChain/reactjs_ethereum/frontend/src/Components/CreateMedical.js"],"names":["React","Component","ipfs","IPFSUploader","IPFS","CreateMedical","props","state","ipfsHash","web3","buffer","captureFile","bind","onSubmit","event","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","Buffer","result","console","log","add","error","hash"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,a;;;;;AACN,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,IAAI,EAAE,IAFG;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AATiB;AAUlB;;;;gCAEWE,K,EAAO;AAAA;;AACjBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAX,EAAf;AACAF,MAAAA,MAAM,CAACG,iBAAP,CAAyBN,IAAzB;;AACAG,MAAAA,MAAM,CAACI,SAAP,GAAmB,YAAM;AACrB,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEd,UAAAA,MAAM,EAAEe,MAAM,CAACN,MAAM,CAACO,MAAR;AAAhB,SAAd;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,MAAI,CAACrB,KAAL,CAAWG,MAAjC;AACH,OAHD;AAID;;;6BAEQI,K,EAAO;AAAA;;AACdA,MAAAA,KAAK,CAACC,cAAN;AACAb,MAAAA,IAAI,CAACgB,KAAL,CAAWW,GAAX,CAAe,KAAKtB,KAAL,CAAWG,MAA1B,EAAkC,UAACoB,KAAD,EAAQJ,MAAR,EAAmB;AACjD,YAAII,KAAJ,EAAW;AACPH,UAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACA;AACH;;AACD,eAAO,MAAI,CAACN,QAAL,CAAc;AAAEhB,UAAAA,QAAQ,EAAEkB,MAAM,CAAC,CAAD,CAAN,CAAUK;AAAtB,SAAd,CAAP;AACH,OAND;AAOD;;;6BAEQ;AACP,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACY;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAFJ,EAGI;AAAK,QAAA,GAAG,iCAA0B,KAAKxB,KAAL,CAAWC,QAArC,CAAR;AAAyD,QAAA,GAAG,EAAC,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,EAKI;AAAM,QAAA,QAAQ,EAAE,KAAKK,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKF,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CALJ,CADJ,CADZ,CADJ;AAgBD;;;;EApD2BV,S;;AAsD5B,eAAeI,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport ipfs from './ipfs';\nimport IPFSUploader from 'ipfs-image-web-upload';\nimport IPFS from 'ipfs';\n\nclass CreateMedical extends Component {\nconstructor(props) {\n  super(props)\n\n  this.state = {\n      ipfsHash: '',\n      web3: null,\n      buffer: null,\n  }\n  this.captureFile = this.captureFile.bind(this);\n  this.onSubmit = this.onSubmit.bind(this);\n}\n\ncaptureFile(event) {\n  event.preventDefault()\n  const file = event.target.files[0]\n  const reader = new window.FileReader()\n  reader.readAsArrayBuffer(file)\n  reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n  }\n}\n\nonSubmit(event) {\n  event.preventDefault()\n  ipfs.files.add(this.state.buffer, (error, result) => {\n      if (error) {\n          console.error(error)\n          return\n      }\n      return this.setState({ ipfsHash: result[0].hash })\n  })\n}\n\nrender() {\n  return (\n      <div className=\"col-md-3\">\n                  <div className=\"pure-g\">\n                      <div className=\"pure-u-1-1\">\n                          <h1>Your Image dsss</h1>\n                          <p>This image is stored on IPFS & The Ethereum Blockchain!</p>\n                          <img src={`https://ipfs.io/ipfs/${this.state.ipfsHash}`} alt=\"\" />\n                          <h2>Upload Image</h2>\n                          <form onSubmit={this.onSubmit} >\n                              <input type='file' onChange={this.captureFile} />\n                              <input type='submit' value=\"click\"/>\n                          </form>\n                      </div>\n                  </div>\n      </div>\n  );\n}\n}\nexport default CreateMedical;\n"]},"metadata":{},"sourceType":"module"}