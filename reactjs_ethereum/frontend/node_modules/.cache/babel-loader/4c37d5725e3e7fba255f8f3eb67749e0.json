{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('iso-url'),\n    URL = _require.URL;\n\nvar fetch = require('../../runtime/fetch-nodejs');\n\nmodule.exports = function (self) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url, options, callback) {\n        var files, parsedUrl, res, content, path;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (typeof options === 'function') {\n                  callback = options;\n                  options = {};\n                }\n\n                _context.prev = 1;\n                parsedUrl = new URL(url);\n                _context.next = 5;\n                return fetch(url);\n\n              case 5:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 8;\n                  break;\n                }\n\n                throw new Error('unexpected status code: ' + res.status);\n\n              case 8:\n                _context.t0 = Buffer;\n                _context.next = 11;\n                return res.arrayBuffer();\n\n              case 11:\n                _context.t1 = _context.sent;\n                content = _context.t0.from.call(_context.t0, _context.t1);\n                path = decodeURIComponent(parsedUrl.pathname.split('/').pop());\n                _context.next = 16;\n                return self.add({\n                  content: content,\n                  path: path\n                }, options);\n\n              case 16:\n                files = _context.sent;\n                _context.next = 24;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t2 = _context[\"catch\"](1);\n\n                if (!callback) {\n                  _context.next = 23;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", callback(_context.t2));\n\n              case 23:\n                throw _context.t2;\n\n              case 24:\n                if (callback) {\n                  callback(null, files);\n                }\n\n                return _context.abrupt(\"return\", files);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 19]]);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":null,"metadata":{},"sourceType":"script"}