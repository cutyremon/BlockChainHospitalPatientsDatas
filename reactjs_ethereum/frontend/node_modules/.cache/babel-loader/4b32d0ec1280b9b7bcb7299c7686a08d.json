{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar mh = require('multihashes');\n\nvar mc = require('multicodec');\n\nvar persist =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(node, ipld, options) {\n    var format;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!options.codec && node.length) {\n              options.cidVersion = 1;\n              options.codec = 'raw';\n            }\n\n            if (isNaN(options.hashAlg)) {\n              options.hashAlg = mh.names[options.hashAlg];\n            }\n\n            if (options.hashAlg !== mh.names['sha2-256']) {\n              options.cidVersion = 1;\n            }\n\n            if (options.format) {\n              options.codec = options.format;\n            }\n\n            format = mc[options.codec.toUpperCase().replace(/-/g, '_')];\n            return _context.abrupt(\"return\", ipld.put(node, format, options));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function persist(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = persist;","map":null,"metadata":{},"sourceType":"script"}