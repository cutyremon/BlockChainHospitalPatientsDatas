{"ast":null,"code":"'use strict';\n\nvar errCode = require('err-code');\n\nmodule.exports = {\n  CONNECTION_FAILED: function CONNECTION_FAILED(err) {\n    return errCode(err, 'CONNECTION_FAILED');\n  },\n  DIAL_ABORTED: function DIAL_ABORTED() {\n    return errCode('Dial was aborted', 'DIAL_ABORTED');\n  },\n  ERR_BLACKLISTED: function ERR_BLACKLISTED() {\n    return errCode('Dial is currently blacklisted for this peer', 'ERR_BLACKLISTED');\n  },\n  DIAL_SELF: function DIAL_SELF() {\n    return errCode('A node cannot dial itself', 'DIAL_SELF');\n  },\n  INVALID_STATE_TRANSITION: function INVALID_STATE_TRANSITION(err) {\n    return errCode(err, 'INVALID_STATE_TRANSITION');\n  },\n  NO_TRANSPORTS_REGISTERED: function NO_TRANSPORTS_REGISTERED() {\n    return errCode('No transports registered, dial not possible', 'NO_TRANSPORTS_REGISTERED');\n  },\n  PROTECTOR_REQUIRED: function PROTECTOR_REQUIRED() {\n    return errCode('No protector provided with private network enforced', 'PROTECTOR_REQUIRED');\n  },\n  UNEXPECTED_END: function UNEXPECTED_END() {\n    return errCode('Unexpected end of input from reader.', 'UNEXPECTED_END');\n  },\n  maybeUnexpectedEnd: function maybeUnexpectedEnd(err) {\n    if (err === true) {\n      return module.exports.UNEXPECTED_END();\n    }\n\n    return err;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}