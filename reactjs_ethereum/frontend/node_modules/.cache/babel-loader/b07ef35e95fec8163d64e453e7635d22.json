{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/cutyremon/blockChain/reactjs_ethereum/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar PeerList = require('./peer-list');\n/**\n * Like PeerList but with a length restriction.\n */\n\n\nvar LimitedPeerList =\n/*#__PURE__*/\nfunction (_PeerList) {\n  _inherits(LimitedPeerList, _PeerList);\n\n  /**\n   * Create a new limited peer list.\n   *\n   * @param {number} limit\n   */\n  function LimitedPeerList(limit) {\n    var _this;\n\n    _classCallCheck(this, LimitedPeerList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LimitedPeerList).call(this));\n    _this.limit = limit;\n    return _this;\n  }\n  /**\n   * Add a PeerInfo if it fits in the list\n   *\n   * @param {PeerInfo} info\n   * @returns {bool}\n   */\n\n\n  _createClass(LimitedPeerList, [{\n    key: \"push\",\n    value: function push(info) {\n      if (this.length < this.limit) {\n        return _get(_getPrototypeOf(LimitedPeerList.prototype), \"push\", this).call(this, info);\n      }\n\n      return false;\n    }\n  }]);\n\n  return LimitedPeerList;\n}(PeerList);\n\nmodule.exports = LimitedPeerList;","map":null,"metadata":{},"sourceType":"script"}