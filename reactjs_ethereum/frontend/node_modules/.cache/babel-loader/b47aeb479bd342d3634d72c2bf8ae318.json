{"ast":null,"code":"'use strict';\n\nvar exporter = require('ipfs-unixfs-exporter');\n\nvar deferred = require('pull-defer');\n\nvar toPullStream = require('async-iterator-to-pull-stream');\n\nvar _require = require('./utils'),\n    normalizePath = _require.normalizePath;\n\nmodule.exports = function (self) {\n  return function catPullStream(ipfsPath, options) {\n    if (typeof ipfsPath === 'function') {\n      throw new Error('You must supply an ipfsPath');\n    }\n\n    options = options || {};\n    ipfsPath = normalizePath(ipfsPath);\n    var pathComponents = ipfsPath.split('/');\n\n    if (options.preload !== false) {\n      self._preload(pathComponents[0]);\n    }\n\n    var d = deferred.source();\n    exporter(ipfsPath, self._ipld, options).then(function (file) {\n      // File may not have unixfs prop if small & imported with rawLeaves true\n      if (file.unixfs && file.unixfs.type.includes('dir')) {\n        return d.abort(new Error('this dag node is a directory'));\n      }\n\n      if (!file.content) {\n        return d.abort(new Error('this dag node has no content'));\n      }\n\n      d.resolve(toPullStream.source(file.content(options)));\n    }, function (err) {\n      d.abort(err);\n    });\n    return d;\n  };\n};","map":null,"metadata":{},"sourceType":"script"}