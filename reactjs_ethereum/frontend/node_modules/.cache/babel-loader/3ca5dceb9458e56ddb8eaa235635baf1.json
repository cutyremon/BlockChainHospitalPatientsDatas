{"ast":null,"code":"'use strict';\n\nvar abortable = require('pull-abortable');\n\nvar pull = require('pull-stream');\n\nvar debug = require('debug');\n\nvar MULTIPLEX_CODEC = require('./codec');\n\nvar Mplex = require('./mplex');\n\nvar Muxer = require('./muxer');\n\nvar log = debug('pull-plex');\nlog.err = debug('pull-plex:err');\n/**\n * Wraps `conn` with a `StreamMuxer` and returns the `StreamMuxer`\n * @param {Connection} conn An `interface-connection` compliant connection\n * @param {boolean} isListener Whether or not the muxer is the listener\n * @returns {StreamMuxer}\n */\n\nfunction create(conn, isListener) {\n  var mpx = new Mplex(!isListener);\n  var aborter = abortable();\n  pull(conn, mpx, aborter, conn);\n  var muxer = new Muxer(conn, mpx);\n  muxer.once('error', function (err) {\n    log.err('got error', err);\n    aborter.abort(err); // TODO: should we do the abort here or just ignore?\n  });\n  muxer.on('close', function () {\n    log('closing muxer');\n    aborter.abort();\n  });\n  return muxer;\n}\n\nexports = module.exports = create;\nexports.pullMplex = Mplex;\nexports.multicodec = MULTIPLEX_CODEC;\n\nexports.dialer = function (conn) {\n  return create(conn, false);\n};\n\nexports.listener = function (conn) {\n  return create(conn, true);\n};","map":null,"metadata":{},"sourceType":"script"}